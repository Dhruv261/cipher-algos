{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Desktop\\\\good god\\\\Movie-list-client-master\\\\src\\\\components\\\\HomePlaylistButtons\\\\AddToPlaylist.component.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\n// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { UserContext } from '../../context/user.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddToPlaylist = () => {\n  _s();\n  // const [addPlaylistForm, setAddPlaylistForm] = useState(false);\n  const {\n    setCreatePlaylistFrom,\n    setAddPlaylistForm,\n    addPlaylistForm\n  } = useContext(UserContext);\n  const [listOfMovies, setListOfMovies] = useState();\n  const {\n    movieData\n  } = useContext(UserContext);\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const [afterAddMessage, setAfterAddMessage] = useState();\n  useEffect(() => {\n    const getUsers = async () => {\n      const sessionToken = sessionStorage.getItem('token');\n      fetch('http://localhost:3001/playlist-list', {\n        method: 'GET',\n        // or 'PUT'\n        headers: {\n          'Content-Type': 'text/plain',\n          token: 'Bearer' + sessionToken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setListOfMovies(data);\n      });\n    };\n    getUsers();\n  }, []);\n  const fetchFunc = async () => {\n    const sessionToken = sessionStorage.getItem('token');\n    fetch('http://localhost:3001/playlist-list', {\n      method: 'GET',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'text/plain',\n        token: 'Bearer' + sessionToken\n      }\n    }).then(response => response.json()).then(data => {\n      setListOfMovies(data);\n    });\n  };\n  const xMessage = message => {\n    setIsAlertVisible(true);\n    setTimeout(() => {\n      setIsAlertVisible(false);\n    }, 2000);\n  };\n  const addToPlaylistButton = index => {\n    const sessionToken = sessionStorage.getItem('token');\n    if (movieData.Response === 'False') {\n      xMessage();\n      setAfterAddMessage('Name cannot be empty.');\n    } else {\n      const sendData = {\n        objectId: listOfMovies[index]._id,\n        movieToAdd: movieData.Title\n      };\n      if (sendData.movieToAdd === undefined) {\n        xMessage();\n        setAfterAddMessage('Please search a movie to add it to the playlist.');\n      } else {\n        fetch('http://localhost:3001/concat-list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            token: 'Bearer' + sessionToken\n          },\n          body: JSON.stringify(sendData)\n        }).then(response => response.json()).then(data => {\n          xMessage();\n          setAfterAddMessage(data.message);\n        });\n      }\n    }\n  };\n  const ATPL = () => {\n    // add to playlist\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center p-5 mt-5 overflow-auto border rounded-md max-h-56 place-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-52\",\n          children: listOfMovies && listOfMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-red-600\",\n            children: \"No playlist available. Please create a new playlist.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : listOfMovies.map((title, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex w-56 h-10 p-1 my-2 text-teal-900 border\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-start flex-1 ml-2\",\n                children: title.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"right-0 flex-none px-2 text-white duration-150 bg-blue-600 border rounded-md hover:bg-blue-400\",\n                onClick: () => addToPlaylistButton(index),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), isAlertVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 text-xl text-center text-green-500\",\n        children: afterAddMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col place-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"p-3 text-white duration-200 bg-blue-700 border rounded-md w-44 hover:bg-blue-400 hover:text-black\",\n      onClick: () => {\n        setAddPlaylistForm(!addPlaylistForm);\n        setCreatePlaylistFrom(false);\n        fetchFunc();\n      },\n      children: \"Add To Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), addPlaylistForm === true ? /*#__PURE__*/_jsxDEV(ATPL, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 35\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(AddToPlaylist, \"62KVkwZcZIUqzQMh5Fd68CZH6XQ=\");\n_c = AddToPlaylist;\nexport default AddToPlaylist;\nvar _c;\n$RefreshReg$(_c, \"AddToPlaylist\");","map":{"version":3,"names":["useContext","useEffect","useState","UserContext","AddToPlaylist","setCreatePlaylistFrom","setAddPlaylistForm","addPlaylistForm","listOfMovies","setListOfMovies","movieData","isAlertVisible","setIsAlertVisible","afterAddMessage","setAfterAddMessage","getUsers","sessionToken","sessionStorage","getItem","fetch","method","headers","token","then","response","json","data","console","log","fetchFunc","xMessage","message","setTimeout","addToPlaylistButton","index","Response","sendData","objectId","_id","movieToAdd","Title","undefined","body","JSON","stringify","ATPL","length","map","title"],"sources":["C:/Users/dhruv/Desktop/good god/Movie-list-client-master/src/components/HomePlaylistButtons/AddToPlaylist.component.jsx"],"sourcesContent":["import { useContext, useEffect } from 'react';\n// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { UserContext } from '../../context/user.context';\n\n\nconst AddToPlaylist = () => {\n  // const [addPlaylistForm, setAddPlaylistForm] = useState(false);\n  const { setCreatePlaylistFrom, setAddPlaylistForm, addPlaylistForm } =\n    useContext(UserContext);\n  const [listOfMovies, setListOfMovies] = useState();\n  const { movieData } = useContext(UserContext);\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const [afterAddMessage, setAfterAddMessage] = useState();\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const sessionToken = sessionStorage.getItem('token');\n      fetch('http://localhost:3001/playlist-list', {\n        method: 'GET', // or 'PUT'\n        headers: {\n          'Content-Type': 'text/plain',\n          token: 'Bearer' + sessionToken,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          setListOfMovies(data);\n        });\n    };\n\n    getUsers();\n  }, []);\n\n  const fetchFunc = async () => {\n    const sessionToken = sessionStorage.getItem('token');\n    fetch('http://localhost:3001/playlist-list', {\n      method: 'GET', // or 'PUT'\n      headers: {\n        'Content-Type': 'text/plain',\n        token: 'Bearer' + sessionToken,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setListOfMovies(data);\n      });\n  };\n\n  const xMessage = (message) => {\n    setIsAlertVisible(true);\n\n    setTimeout(() => {\n      setIsAlertVisible(false);\n    }, 2000);\n  };\n\n  const addToPlaylistButton = (index) => {\n    const sessionToken = sessionStorage.getItem('token');\n    if (movieData.Response === 'False') {\n      xMessage();\n      setAfterAddMessage('Name cannot be empty.');\n    } else {\n      const sendData = {\n        objectId: listOfMovies[index]._id,\n        movieToAdd: movieData.Title,\n      };\n      if (sendData.movieToAdd === undefined) {\n        xMessage();\n        setAfterAddMessage('Please search a movie to add it to the playlist.');\n      } else {\n        fetch('http://localhost:3001/concat-list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            token: 'Bearer' + sessionToken,\n          },\n          body: JSON.stringify(sendData),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            xMessage();\n            setAfterAddMessage(data.message);\n          });\n      }\n    }\n  };\n\n  const ATPL = () => {\n    // add to playlist\n    return (\n      <div>\n        <div className='flex flex-col justify-center p-5 mt-5 overflow-auto border rounded-md max-h-56 place-items-center'>\n          <div className='h-52'>\n            {listOfMovies && listOfMovies.length === 0 ? (\n              <div className='text-center text-red-600'>\n                No playlist available. Please create a new playlist.\n              </div>\n            ) : (\n              listOfMovies.map((title, index) => {\n                return (\n                  <div\n                    className='flex w-56 h-10 p-1 my-2 text-teal-900 border'\n                    key={index}\n                  >\n                    <div className='flex items-center justify-start flex-1 ml-2'>\n                      {title.title}\n                    </div>\n                    <button\n                      className='right-0 flex-none px-2 text-white duration-150 bg-blue-600 border rounded-md hover:bg-blue-400'\n                      onClick={() => addToPlaylistButton(index)}\n                    >\n                      +\n                    </button>\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n        {isAlertVisible && (\n          <div className='p-5 text-xl text-center text-green-500'>\n            {afterAddMessage}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className='flex flex-col place-items-center'>\n      <button\n        className='p-3 text-white duration-200 bg-blue-700 border rounded-md w-44 hover:bg-blue-400 hover:text-black'\n        onClick={() => {\n          setAddPlaylistForm(!addPlaylistForm);\n          setCreatePlaylistFrom(false);\n          fetchFunc();\n        }}\n      >\n        Add To Playlist\n      </button>\n      {addPlaylistForm === true ? <ATPL /> : null}\n    </div>\n  );\n};\n\nexport default AddToPlaylist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}