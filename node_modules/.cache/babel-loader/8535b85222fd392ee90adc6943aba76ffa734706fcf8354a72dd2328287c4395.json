{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Desktop\\\\good god\\\\Movie-list-client-master\\\\src\\\\components\\\\CrypticTab\\\\Cryptic.component.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './Cryptic.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cryptic = () => {\n  _s();\n  const [passList, setPassList] = useState('');\n  const [toUsePassword, setToUsePassword] = useState();\n  const [message, setMessage] = useState('');\n  const [returnedMessage, setReturnedMessage] = useState('');\n  const [passwordNotSelected, setPasswordNotSelected] = useState('');\n\n  // -------------------------------------------------------------------------\n  useEffect(() => {\n    fetch('http://localhost:3001/pass-list', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token')\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setPassList(data);\n    }).catch(error => console.log(error));\n  }, []);\n  const dataToEncrypt = {\n    key: toUsePassword,\n    message\n  };\n\n  // const isPasswordSelected = () => {\n  //   if (toUsePassword === 'Select Your Password') {\n  //     setPasswordNotSelected('Please select your password!');\n  //   } else {\n  //   }\n  // };\n\n  const encryptRequest = async e => {\n    e.preventDefault();\n    console.log('encryptRequest Working');\n    fetch('http://localhost:3001/encrypt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token')\n      },\n      body: JSON.stringify(dataToEncrypt)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setReturnedMessage(data.encrypted);\n    }).catch(error => console.log(error));\n  };\n  const decryptRequest = async e => {\n    e.preventDefault();\n    console.log('encryptRequest Working');\n    fetch('http://localhost:3001/decrypt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token')\n      },\n      body: JSON.stringify(dataToEncrypt)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setReturnedMessage(data.decrypted);\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: passList.length > 1 ? /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"\",\n        onChange: e => {\n          setToUsePassword(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), passList.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.passwordOrg,\n          children: option.title\n        }, option._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full cryptic-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          className: \"message-box\",\n          placeholder: \"Enter your plain text/ Cipher Text\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: encryptRequest,\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decryptRequest,\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-box message-output\",\n          placeholder: \"Encrypted Text\",\n          value: returnedMessage,\n          editable: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Cryptic, \"3XcGycZC3vpLOXW6BXK4/QIYzpc=\");\n_c = Cryptic;\nexport default Cryptic;\nvar _c;\n$RefreshReg$(_c, \"Cryptic\");","map":{"version":3,"names":["useEffect","useState","Cryptic","passList","setPassList","toUsePassword","setToUsePassword","message","setMessage","returnedMessage","setReturnedMessage","passwordNotSelected","setPasswordNotSelected","fetch","method","headers","token","sessionStorage","getItem","then","response","json","data","console","log","catch","error","dataToEncrypt","key","encryptRequest","e","preventDefault","body","JSON","stringify","encrypted","decryptRequest","decrypted","length","target","value","map","option","passwordOrg","title","_id"],"sources":["C:/Users/dhruv/Desktop/good god/Movie-list-client-master/src/components/CrypticTab/Cryptic.component.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './Cryptic.style.css';\nconst Cryptic = () => {\n  const [passList, setPassList] = useState('');\n  const [toUsePassword, setToUsePassword] = useState();\n  const [message, setMessage] = useState('');\n  const [returnedMessage, setReturnedMessage] = useState('');\n  const [passwordNotSelected, setPasswordNotSelected] = useState('');\n\n  // -------------------------------------------------------------------------\n  useEffect(() => {\n    fetch('http://localhost:3001/pass-list', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token'),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setPassList(data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const dataToEncrypt = {\n    key: toUsePassword,\n    message,\n  };\n\n  // const isPasswordSelected = () => {\n  //   if (toUsePassword === 'Select Your Password') {\n  //     setPasswordNotSelected('Please select your password!');\n  //   } else {\n  //   }\n  // };\n\n  const encryptRequest = async (e) => {\n    e.preventDefault();\n    console.log('encryptRequest Working');\n    fetch('http://localhost:3001/encrypt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token'),\n      },\n      body: JSON.stringify(dataToEncrypt),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setReturnedMessage(data.encrypted);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const decryptRequest = async (e) => {\n    e.preventDefault();\n    console.log('encryptRequest Working');\n    fetch('http://localhost:3001/decrypt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: 'Bearer' + sessionStorage.getItem('token'),\n      },\n      body: JSON.stringify(dataToEncrypt),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setReturnedMessage(data.decrypted);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <div>\n        {passList.length > 1 ? (\n          <select\n            name=''\n            id=''\n            onChange={(e) => {\n              setToUsePassword(e.target.value);\n            }}\n          >\n            <option>Select Your Password</option>\n            {passList.map((option) => (\n              <option key={option._id} value={option.passwordOrg}>\n                {option.title}\n              </option>\n            ))}\n          </select>\n        ) : null}\n      </div>\n      <div className='w-full cryptic-container'>\n        <div>\n          <input\n            type='text'\n            name=''\n            id=''\n            className='message-box'\n            placeholder='Enter your plain text/ Cipher Text'\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n        <div>\n          <button onClick={encryptRequest}>Encrypt</button>\n          <button onClick={decryptRequest}>Decrypt</button>\n        </div>\n        <div>\n          <input\n            type='text'\n            className='message-box message-output'\n            placeholder='Encrypted Text'\n            value={returnedMessage}\n            editable='false'\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Cryptic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}