{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Desktop\\\\good god\\\\Movie-list-client-master\\\\src\\\\components\\\\HomePlaylistButtons\\\\PlayListForm.component.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../../context/user.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPLF = () => {\n  _s();\n  const [playlistName, setPlaylistName] = useState();\n  // const [publicPlaylist, setPublicPlaylist] = useState(false);\n  const {\n    sessionToken\n  } = useContext(UserContext);\n  const [response, setResponse] = useState();\n  const [isAlertVisible1, setIsAlertVisible1] = useState(false);\n  //create play list from\n\n  const rendData = {\n    title: playlistName\n    // openList: publicPlaylist,\n  };\n\n  const createPlaylist = async e => {\n    e.preventDefault();\n    if (rendData.title === undefined) {\n      setIsAlertVisible1(true);\n      zmessage();\n    } else {\n      await fetch('http://localhost:3001/create-playlist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          token: 'Bearer' + sessionToken\n        },\n        body: JSON.stringify(rendData)\n      }).then(response => response.json()).then(data => {\n        if (data.message === 'Playlist created') {\n          setIsAlertVisible1(true);\n          ymessage();\n        }\n      });\n    }\n  };\n  const zmessage = () => {\n    setResponse('Please give your playlist a name.');\n    setTimeout(() => {\n      setIsAlertVisible1(false);\n    }, 2000);\n  };\n  const ymessage = () => {\n    setResponse('Playlist Created!');\n    setTimeout(() => {\n      setIsAlertVisible1(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col p-5 m-5 border rounded-md place-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Name the playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-auto p-1 my-2 text-teal-900 border outline-none\",\n        onChange: e => setPlaylistName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-24 mt-3 duration-150 border rounded-md bg-slate-400 hover:bg-slate-200 h-9\",\n        onClick: createPlaylist,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isAlertVisible1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 text-xl text-center text-green-500 \",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CPLF, \"5V19ppNhldCIT+jcggdg20GM7lQ=\");\n_c = CPLF;\nexport default CPLF;\nvar _c;\n$RefreshReg$(_c, \"CPLF\");","map":{"version":3,"names":["useContext","useState","UserContext","CPLF","playlistName","setPlaylistName","sessionToken","response","setResponse","isAlertVisible1","setIsAlertVisible1","rendData","title","createPlaylist","e","preventDefault","undefined","zmessage","fetch","method","headers","token","body","JSON","stringify","then","json","data","message","ymessage","setTimeout","target","value"],"sources":["C:/Users/dhruv/Desktop/good god/Movie-list-client-master/src/components/HomePlaylistButtons/PlayListForm.component.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { UserContext } from '../../context/user.context';\n\nconst CPLF = () => {\n  const [playlistName, setPlaylistName] = useState();\n  // const [publicPlaylist, setPublicPlaylist] = useState(false);\n  const { sessionToken } = useContext(UserContext);\n  const [response, setResponse] = useState();\n  const [isAlertVisible1, setIsAlertVisible1] = useState(false);\n  //create play list from\n\n  const rendData = {\n    title: playlistName,\n    // openList: publicPlaylist,\n  };\n\n  const createPlaylist = async (e) => {\n    e.preventDefault();\n    if (rendData.title === undefined) {\n      setIsAlertVisible1(true);\n      zmessage();\n    } else {\n      await fetch('http://localhost:3001/create-playlist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          token: 'Bearer' + sessionToken,\n        },\n        body: JSON.stringify(rendData),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.message === 'Playlist created') {\n            setIsAlertVisible1(true);\n            ymessage();\n          }\n        });\n    }\n  };\n\n  const zmessage = () => {\n    setResponse('Please give your playlist a name.');\n\n    setTimeout(() => {\n      setIsAlertVisible1(false);\n    }, 2000);\n  };\n\n  const ymessage = () => {\n    setResponse('Playlist Created!');\n\n    setTimeout(() => {\n      setIsAlertVisible1(false);\n    }, 2000);\n  };\n\n  return (\n    <div>\n      <div className='flex flex-col p-5 m-5 border rounded-md place-items-center'>\n        <span>Name the playlist</span>\n        <input\n          type='text'\n          className='w-auto p-1 my-2 text-teal-900 border outline-none'\n          onChange={(e) => setPlaylistName(e.target.value)}\n        />\n        {/* <span>\n          Public Playlist\n          <input\n            type='checkbox'\n            name=''\n            id=''\n            className='mx-5'\n            onChange={(e) => setPublicPlaylist(e.target.checked)}\n          />\n        </span> */}\n        <button\n          className='w-24 mt-3 duration-150 border rounded-md bg-slate-400 hover:bg-slate-200 h-9'\n          onClick={createPlaylist}\n        >\n          Submit\n        </button>\n      </div>\n      {isAlertVisible1 && (\n        <div className='p-5 text-xl text-center text-green-500 '>\n          {response}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CPLF;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,4BAA4B;AAAC;AAEzD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,EAAE;EAClD;EACA,MAAM;IAAEK;EAAa,CAAC,GAAGN,UAAU,CAACE,WAAW,CAAC;EAChD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,EAAE;EAC1C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D;;EAEA,MAAMU,QAAQ,GAAG;IACfC,KAAK,EAAER;IACP;EACF,CAAC;;EAED,MAAMS,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIJ,QAAQ,CAACC,KAAK,KAAKI,SAAS,EAAE;MAChCN,kBAAkB,CAAC,IAAI,CAAC;MACxBO,QAAQ,EAAE;IACZ,CAAC,MAAM;MACL,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACnDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,KAAK,EAAE,QAAQ,GAAGf;QACpB,CAAC;QACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ;MAC/B,CAAC,CAAC,CACCc,IAAI,CAAElB,QAAQ,IAAKA,QAAQ,CAACmB,IAAI,EAAE,CAAC,CACnCD,IAAI,CAAEE,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,OAAO,KAAK,kBAAkB,EAAE;UACvClB,kBAAkB,CAAC,IAAI,CAAC;UACxBmB,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMZ,QAAQ,GAAG,MAAM;IACrBT,WAAW,CAAC,mCAAmC,CAAC;IAEhDsB,UAAU,CAAC,MAAM;MACfpB,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMmB,QAAQ,GAAG,MAAM;IACrBrB,WAAW,CAAC,mBAAmB,CAAC;IAEhCsB,UAAU,CAAC,MAAM;MACfpB,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,4DAA4D;MAAA,wBACzE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA8B,eAC9B;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,mDAAmD;QAC7D,QAAQ,EAAGI,CAAC,IAAKT,eAAe,CAACS,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACjD,eAWF;QACE,SAAS,EAAC,8EAA8E;QACxF,OAAO,EAAEnB,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,EACLJ,eAAe,iBACd;MAAK,SAAS,EAAC,yCAAyC;MAAA,UACrDF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAtFIJ,IAAI;AAAA,KAAJA,IAAI;AAwFV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}